{
  "root": true,
  "ignorePatterns": ["projects/*/src/index.html"],
  "parser": "@typescript-eslint/parser",
  "overrides": [
    {
      "files": ["*.ts"],
      "parserOptions": {
        "project": ["tsconfig.json"],
        "createDefaultProgram": true
      },
      "extends": [
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
        "plugin:import/errors",
        "plugin:import/warnings",
        "plugin:import/typescript",
        "plugin:jsdoc/recommended",
        "plugin:prettier/recommended"
      ],
      "plugins": [
        "rxjs",
        "@typescript-eslint",
        "import",
        "jsdoc",
        "prettier"
      ],
      "rules": {
        "import/order": "error",
        "no-console": ["error", { "allow": ["warn", "error"] }],
        "import/no-unresolved": "off",
        "jsdoc/require-returns": "off",
        "jsdoc/check-alignment": "error",
        "jsdoc/check-indentation": "error",
        "jsdoc/require-param-type": "off",
        "jsdoc/require-returns-type": "off",
        "jsdoc/check-tag-names": "off",
        "prettier/prettier": "error",
        "@typescript-eslint/explicit-member-accessibility": "error",
        "@typescript-eslint/unbound-method": "off",
        "@typescript-eslint/no-namespace": "off",
        "@typescript-eslint/no-unsafe-argument": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-unsafe-enum-comparison": "off",
        "@typescript-eslint/no-unsafe-member-access": "off",
        "@typescript-eslint/no-unsafe-call": "off",
        "@typescript-eslint/no-unused-vars": [
          "error",
          {
            "argsIgnorePattern": "^_",
            "varsIgnorePattern": "^_"
          }
        ],
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": ["knw", "knc"],
            "style": "camelCase"
          }
        ],
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "prefix": ["knw", "knc"],
            "style": "kebab-case"
          }
        ],
        "rxjs/no-exposed-subjects": ["error", { "allowProtected": true }],
        "rxjs/finnish": [
          "error",
          {
            "functions": false,
            "methods": false,
            "names": {
              "^(canActivate|canActivateChild|canDeactivate|canLoad|intercept|resolve|validate)$": false
            },
            "parameters": true,
            "properties": true,
            "strict": true,
            "types": {
              "^EventEmitter$": false
            },
            "variables": true
          }
        ],
        "rxjs/no-ignored-replay-buffer": "error",
        "rxjs/no-internal": "error",
        "rxjs/no-nested-subscribe": "error",
        "rxjs/no-unbound-methods": "error",
        "rxjs/throw-error": "error",
        "rxjs/no-async-subscribe": "error",
        "rxjs/no-create": "error",
        "rxjs/no-ignored-observable": "error",
        "rxjs/no-implicit-any-catch": "error",
        "rxjs/no-index": "error",
        "rxjs/no-sharereplay": [
          "error",
          {
            "allowConfig": true
          }
        ],
        "rxjs/no-subclass": "error",
        "rxjs/no-subject-value": "error"
      }
    },
    {
      "files": ["*.html"],
      "extends": ["plugin:@angular-eslint/template/recommended"],
      "rules": {}
    },
    {
      "files": ["*.dto.ts", "*.mapper.ts"],
      "rules": {
        "no-restricted-syntax": [
          "error",
          {
            "selector": "TSPropertySignature[readonly=undefined]",
            "message": "Missing 'readonly' modifier for the DTO property."
          },
          {
            "selector": "TSPropertySignature TSTypeAnnotation[typeAnnotation.type='TSArrayType']",
            "message": "Missing 'readonly' type modifier for array."
          }
        ],
        "@typescript-eslint/naming-convention": "off"
      }
    },
    {
      "files": ["*.html"],
      "extends": ["plugin:@angular-eslint/template/recommended"],
      "rules": {
        "@angular-eslint/template/alt-text": "error",
        "@angular-eslint/template/button-has-type": "error",
        "@angular-eslint/template/no-duplicate-attributes": "error",
        "@angular-eslint/template/no-inline-styles": [
          "error",
          {
            "allowNgStyle": true,
            "allowBindToStyle": true
          }
        ],
        "@angular-eslint/template/no-interpolation-in-attributes": "error",
        "@angular-eslint/template/no-positive-tabindex": "error",
        "@angular-eslint/template/use-track-by-function": "error"
      }
    }
  ]
}
